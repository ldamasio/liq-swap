AWSTemplateFormatVersion: 2010-09-09
Description: >-
  liq-convert
Transform:
  - AWS::Serverless-2016-10-31

Resources:
  # Função Lambda para a API Gateway
  CreateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/createUserController.handler
      Runtime: nodejs18.x
      Environment:
        Variables:
          TABLE_NAME: !Ref UserTable
      Events:
        CreateUserApi:
          Type: Api
          Properties:
            Path: /createUser
            Method: POST
  # Função Lambda para ser acionada pelo SQS e enviar dados para o EventBridge
  SQSLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/sqsLambdaHandler.handler
      Runtime: nodejs18.x
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt MySQSQueue.Arn

  # Definição da fila SQS
  MySQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: MySQSQueue

  # Definição da API Gateway
  MyApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        openapi: "3.0.0"
        info:
          title: Liqi Convert API
          version: "1.0"
        paths:
          /createUser:
            post:
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateUserFunction.Arn}/invocations"
                httpMethod: POST
                type: aws_proxy

  # Definição da regra do EventBridge
  MyEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Liqi Convert Event Rule
      EventPattern:
        source:
          - "aws.sqs"
        detail-type:
          - "SQS Message"
      State: ENABLED
      Targets:
        - Arn: !GetAtt SQSLambdaFunction.Arn
          Id: MyTarget

  # Tabela DynamoDB para armazenar usuários
  UserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: UserTable
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

Outputs:
  # URL da API Gateway para a função CreateUserFunction
  CreateUserApiUrl:
    Description: URL da API Gateway para acionar a função CreateUserFunction
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/createUser"

  # ARN da fila SQS para a função SQSLambdaFunction
  SQSQueueArn:
    Description: ARN da fila SQS para acionar a função SQSLambdaFunction
    Value: !GetAtt MySQSQueue.Arn

  # ARN da tabela DynamoDB para referência
  UsersTableArn:
    Description: ARN da tabela DynamoDB para referência
    Value: !GetAtt UserTable.Arn

Globals:
  Function:
    Timeout: 10
